.TH s2pexec 1
.SH NAME
s2pexec \- SCSI2Pi SCSI/SASI command execution
.SH SYNOPSIS
.B s2pexec
[\fB\--scsi-target/-i\fR \fIID[:LUN]\fR]
[\fB\--sasi-target/-h\fR \fIID[:LUN]\fR]
[\fB\--board-id/-B\fR \fIBOARD_ID\fR]
[\fB\--cdb/-c\fR \fICDB\fR]
[\fB\--buffer-size/-b\fR \fIBUFFER_SIZE\fR]
[\fB\--log-level/-L\fR \fILOG_LEVEL\fR]
{\fB\--binary-input-file/-d\fR \fIFILE\fR]
{\fB\--binary-output-file/-D\fR \fIFILE\fR]
{\fB\--hex-input-file/-t\fR \fIFILE\fR]
{\fB\--hex-output-file/-T\fR \fIFILE\fR]
{\fB\--protobuf-input-file/-p\fR \fIFILE\fR]
[\fB\--protobuf-output-file/-P\fR \fIFIL\fR]
[\fB\--binary-input\fR]
[\fB\--binary-output\fR]
[\fB\--text-input\fR]
[\fB\--text-output\fR]
[\fB\--no-request-sense/-n\fR]
[\fB\--hex-only/\fR]
[\fB\--help/-H\fR]
[\fB\--version/-v\fR]
.SH DESCRIPTION
.B s2pexec
Sends SCSI or SASI commands to a device and displays the results.
Additonally, s2pexec can wrap protobuf input data into a custom SCSI2Pi SCSI command. The input data must be a legal command defined in the SCSI2Pi protobuf interface. See the file s2p_interface.proto for details.

.SH NOTES

.B s2pexec
helps with advanced testing. It requires two connected PiSCSI/RaSCSI boards. The board s2pexec is running on must be a FULLSPEC board because s2pexec requires SCSI initiator support.

.SH OPTIONS
.TP
.BR \--scsi-target/-i\fI " "\fIID[:LUN]
ID and optional LUN (0-31) of the SCSI target device.
.TP
.BR \--sasi-target/-h\fI " "\fIID[:LUN]
ID and optional LUN (0-1) of the SASI target device.
.TP
.BR \--board-id/-B\fI " "\fIBOARD_ID
SCSI ID used by s2pexec. If not specified, s2pexec will use the board (initiator) ID 7.
.TP
.BR \--cdb/-c\fI " "\fICDB
Command block to send in hexecimal format. Hexadecimal numbers may be separated by a colon.
.TP
.BR \--buffer-size/-b\fI " "\fIBUFFER_SIZE
Buffer size for receiving data, default is 4096 bytes. When sending data the buffer is automatically sized to match the size of the data to be sent.
.TP
.BR \--log-level/-L\fI " " \fILOG_LEVEL
Set the log level (trace, debug, info, warning, error, off). The default log level is 'info'.
.TP
.BR \--binary-input-file/-f\fI " "\fIFILE
Optional file with binary data to be sent in the DATA OUT phase.
.TP
.BR \--binary-output-file/-F\fI " "\fIFILE
Optional file for binary data received in the DATA IN phase.
.TP
.BR \--hex-input-file/-t\fI " "\fIFILE
Optional file with data in hexadecimal (human-readable) format to be sent in the DATA OUT phase.
.TP
.BR \--hex-output-file/-T\fI " "\fIFILE
Optional file for data received in the DATA IN phase. This data in this file are coded in hexadecimal (human-readable) format.
.TP
.BR \--protobuf-input-file/-p\fI " "\fIFILE
The protobuf data input file when using s2pexec for sending a custom SCSI2Pi SCSI command, by default in JSON format.
.TP
.BR \--protobuf-output-file/-P\fI " "\fIFILE
The protobuf data output file when using s2pexec for sending a custom SCSI2Pi SCSI command, by default in JSON format. If not specified JSON data will be displayed on stdout.
.TP
.BR \--binary-input\fI
Signals that the protobuf input file for the custom SCSI2Pi SCSI command is in protobuf binary format instead of JSON.
.TP
.BR \--binary-output\fI
Generate a protobuf binary format file instead of JSON for the results of the custom SCSI2Pi SCSI command.
.TP
.BR \--text-input\fI
Signals that the protobuf input file for the custom SCSI2Pi SCSI command is in protobuf text format instead of JSON.
.TP
.BR \--text-output\fI
Generate a protobuf text format file instead of JSON for the results of the custom SCSI2Pi SCSI command.
.TP
.BR \--no-request-sense\fI
Do not automatically send REQUEST SENSE after an error to get the sense data.
.TP
.BR \--hex-only\fI
Do not display/save the offsets and the ASCI representantion of received data.
.TP
.BR \--help/-H\fI
Show a help text.
.TP
.BR \--version/-v\fI
Show the s2pexec version.

.SH EXAMPLE
s2pexec -i 0 -c 12:00:00:00:20:00
Send an INQUIRY command to the device with SCSI ID 0 and display the results.

s2pexec -i 5 -c 15:11:00:04:0c:00 -t data.dat
Send a MODE SELECT to the device with SCSI ID 5, with the hexadecimally code data in data.dat as parameters.

.SH SEE ALSO
s2pctl(1), s2p(1), s2pdump(1)
 
Also see <https://www.scsi2pi.net> and <https://github.com/uweseimet/scsi2pi>.
