.TH s2pexec 1
.SH NAME
s2pexec \- SCSI2Pi SCSI/SASI command executor
.SH SYNOPSIS
.B s2pexec
[\fB\--scsi-target/-i\fR \fIID[:LUN]\fR]
[\fB\--sasi-target/-h\fR \fIID[:LUN]\fR]
[\fB\--board-id/-B\fR \fIBOARD_ID\fR]
[\fB\--cdb/-c\fR \fICDB[:CDB:...]\fR]
[\fB\--data/-d\fR \fIDATA\fR]
[\fB\--buffer-size/-b\fR \fIBUFFER_SIZE\fR]
[\fB\--log-level/-L\fR \fILOG_LEVEL\fR]
{\fB\--binary-input-file/-f\fR \fIFILE\fR]
{\fB\--binary-output-file/-F\fR \fIFILE\fR]
{\fB\--hex-input-file/-t\fR \fIFILE\fR]
{\fB\--hex-output-file/-T\fR \fIFILE\fR]
{\fB\--timeout/-o\fR \fITIMEOUT\fR]
[\fB\--request-sense/-R\fR]
[\fB\--reset-bus/-r\fR]
[\fB\--hex-only/\fR]
[\fB\--help/-H\fR]
[\fB\--version/-v\fR]
.SH DESCRIPTION
.B s2pexec
sends SCSI or SASI commands to a device and displays the results.

When launched without arguments s2pexec enters interactive mode, where you can enter commands on the command line. Like with the bash shell, "!!" repeats the last command.
In interactive mode the target, initiator and log level settings are preserved between command invocations.

.SH NOTES

.B s2pexec
helps with advanced testing. The board s2pexec is running on must be a FULLSPEC board because s2pexec requires SCSI initiator support.

.SH OPTIONS
.TP
.BR --scsi-target/-i\fI " "\fIID[:LUN]
ID and optional LUN (0-31) of the SCSI target device.
.TP
.BR --sasi-target/-h\fI " "\fIID[:LUN]
ID and optional LUN (0-1) of the SASI target device.
.TP
.BR --board-id/-B\fI " "\fIBOARD_ID
Initiator ID used by s2pexec. If not specified, s2pexec will use the board (initiator) ID 7. Not relevant for SASI.
.TP
.BR --cdb/-c\fI " "\fICDB[:CDB:...]
Command blocks to send in hexecimal format. Hexadecimal numbers may be separated by a colon. s2pexec also accepts linked commands.
.TP
.BR --data/-d\fI " "\fIDATA
Data to send with the command in hexedecimal format. These data are sent in the DATA OUT phase. If DATA starts with @, the remaining string is the name of a file in hexadecimal format to read the data from.
.TP
.BR --buffer-size/-b\fI " "\fIBUFFER_SIZE
Buffer size for received data, the default is 131072 bytes. When sending data the buffer is automatically sized to match the size of data to be sent.
.TP
.BR --log-level/-L\fI " " \fILOG_LEVEL
Set the log level (trace, debug, info, warning, error, critical, off). The default log level is 'info'.
.TP
.BR --binary-input-file/-f\fI " "\fIFILE
Optional file with binary data to send in the DATA OUT phase.
.TP
.BR --binary-output-file/-F\fI " "\fIFILE
Optional file for binary data received in the DATA IN phase.
.TP
.BR --hex-input-file/-t\fI " "\fIFILE
Optional file with data in hexadecimal (human-readable) format to send in the DATA OUT phase.
.TP
.BR \--hex-output-file/-T\fI " "\fIFILE
Optional file for data received in the DATA IN phase. The data in this file are coded in hexadecimal (human-readable) format.
.TP
.BR --timeout/-o\fI " "\fITIMEOUT
The command timeout in seconds, default is 3 seconds. Operations like formatting may take much longer.
.TP
.BR --request-sense/-R\fI
Automatically send REQUEST SENSE after an error in order to get the sense data.
.TP
.BR --reset-bus/-r\fI
Reset the bus.
.TP
.BR --hex-only\fI
Do not display/save the offsets and the ASCII representantion of the received data.
.TP
.BR --help/-H\fI
Display a help text.
.TP
.BR --version/-v\fI
Display the s2pexec version.

.SH EXIT STATUS
0:  No error. -1: There was a general error and the command could not be sent.
Any other value means the command could be sent but the target device reported an error. In this case the return status contains the additional sense code (ASC).

.SH EXAMPLE
s2pexec -i 0 -c 12:00:00:00:20:00
.br
Send an INQUIRY command to the device with SCSI ID 0 and display the results.

s2pexec -i 5 -c 15:11:00:04:0c:00 -t data.dat
.br
Send a MODE SELECT command to the device with SCSI ID 5, with the hexadecimally coded data in data.dat as parameters.

s2pexec -i 5:1 -c 15:11:00:04:0c:00 -d 00:00:00:08:00:00:00:00:00:00:02:00
.br
Send a MODE SELECT command to the device with SCSI ID 5 and LUN 1, with explicit parameter data.

.SH SEE ALSO
s2p(1), s2pctl(1), s2pdump(1), s2pproto(1), s2psimh(1), s2ptool(1)
 
Also see <https://www.scsi2pi.net> and <https://github.com/uweseimet/scsi2pi>.
